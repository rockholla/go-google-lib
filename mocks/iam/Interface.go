// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	iam "github.com/rockholla/go-google-lib/iam"
	logger "github.com/rockholla/go-lib/logger"

	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// DeleteServiceAccount provides a mock function with given fields: projectID, serviceAccountName
func (_m *Interface) DeleteServiceAccount(projectID string, serviceAccountName string) error {
	ret := _m.Called(projectID, serviceAccountName)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(projectID, serviceAccountName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EnsureServiceAccount provides a mock function with given fields: projectID, serviceAccount, createNewKey
func (_m *Interface) EnsureServiceAccount(projectID string, serviceAccount *iam.ServiceAccount, createNewKey bool) error {
	ret := _m.Called(projectID, serviceAccount, createNewKey)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *iam.ServiceAccount, bool) error); ok {
		r0 = rf(projectID, serviceAccount, createNewKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Initialize provides a mock function with given fields: credentials, log
func (_m *Interface) Initialize(credentials string, log logger.Interface) error {
	ret := _m.Called(credentials, log)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, logger.Interface) error); ok {
		r0 = rf(credentials, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
