// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cloudidentity "google.golang.org/api/cloudidentity/v1beta1"

	logger "github.com/rockholla/go-lib/logger"

	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// EnsureGroup provides a mock function with given fields: name, domain, customerID
func (_m *Interface) EnsureGroup(name string, domain string, customerID string) (*cloudidentity.Group, error) {
	ret := _m.Called(name, domain, customerID)

	var r0 *cloudidentity.Group
	if rf, ok := ret.Get(0).(func(string, string, string) *cloudidentity.Group); ok {
		r0 = rf(name, domain, customerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cloudidentity.Group)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(name, domain, customerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Initialize provides a mock function with given fields: impersonateServiceAccountEmail, log
func (_m *Interface) Initialize(impersonateServiceAccountEmail string, log logger.Interface) error {
	ret := _m.Called(impersonateServiceAccountEmail, log)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, logger.Interface) error); ok {
		r0 = rf(impersonateServiceAccountEmail, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
