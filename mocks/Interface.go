// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	admin "github.com/rockholla/go-google-lib/admin"
	cloudbilling "github.com/rockholla/go-google-lib/cloudbilling"

	cloudidentity "github.com/rockholla/go-google-lib/cloudidentity"

	cloudresourcemanager "github.com/rockholla/go-google-lib/cloudresourcemanager"

	compute "github.com/rockholla/go-google-lib/compute"

	deploymentmanager "github.com/rockholla/go-google-lib/deploymentmanager"

	dns "github.com/rockholla/go-google-lib/dns"

	iam "github.com/rockholla/go-google-lib/iam"

	logger "github.com/rockholla/go-lib/logger"

	mock "github.com/stretchr/testify/mock"

	storage "github.com/rockholla/go-google-lib/storage"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// GetAdmin provides a mock function with given fields: credentialsJSON, domain, adminUsername
func (_m *Interface) GetAdmin(credentialsJSON string, domain string, adminUsername string) (admin.Interface, error) {
	ret := _m.Called(credentialsJSON, domain, adminUsername)

	var r0 admin.Interface
	if rf, ok := ret.Get(0).(func(string, string, string) admin.Interface); ok {
		r0 = rf(credentialsJSON, domain, adminUsername)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(admin.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(credentialsJSON, domain, adminUsername)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCloudBilling provides a mock function with given fields:
func (_m *Interface) GetCloudBilling() (cloudbilling.Interface, error) {
	ret := _m.Called()

	var r0 cloudbilling.Interface
	if rf, ok := ret.Get(0).(func() cloudbilling.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cloudbilling.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCloudIdentity provides a mock function with given fields:
func (_m *Interface) GetCloudIdentity() (cloudidentity.Interface, error) {
	ret := _m.Called()

	var r0 cloudidentity.Interface
	if rf, ok := ret.Get(0).(func() cloudidentity.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cloudidentity.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCloudResourceManager provides a mock function with given fields:
func (_m *Interface) GetCloudResourceManager() (cloudresourcemanager.Interface, error) {
	ret := _m.Called()

	var r0 cloudresourcemanager.Interface
	if rf, ok := ret.Get(0).(func() cloudresourcemanager.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cloudresourcemanager.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCompute provides a mock function with given fields:
func (_m *Interface) GetCompute() (compute.Interface, error) {
	ret := _m.Called()

	var r0 compute.Interface
	if rf, ok := ret.Get(0).(func() compute.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(compute.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDNS provides a mock function with given fields:
func (_m *Interface) GetDNS() (dns.Interface, error) {
	ret := _m.Called()

	var r0 dns.Interface
	if rf, ok := ret.Get(0).(func() dns.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dns.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeploymentManager provides a mock function with given fields:
func (_m *Interface) GetDeploymentManager() (deploymentmanager.Interface, error) {
	ret := _m.Called()

	var r0 deploymentmanager.Interface
	if rf, ok := ret.Get(0).(func() deploymentmanager.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(deploymentmanager.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIAM provides a mock function with given fields:
func (_m *Interface) GetIAM() (iam.Interface, error) {
	ret := _m.Called()

	var r0 iam.Interface
	if rf, ok := ret.Get(0).(func() iam.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(iam.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStorage provides a mock function with given fields:
func (_m *Interface) GetStorage() (storage.Interface, error) {
	ret := _m.Called()

	var r0 storage.Interface
	if rf, ok := ret.Get(0).(func() storage.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.Interface)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Initialize provides a mock function with given fields: credentials, log
func (_m *Interface) Initialize(credentials string, log logger.Interface) {
	_m.Called(credentials, log)
}
